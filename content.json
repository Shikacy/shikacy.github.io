[{"title":"下载Onedrive或Sharepoint分享的文件夹","path":"2023/03/06/downloadfromondrive/","text":"背景因为Onedrive for Business一般是用于商业的，其分享的文件夹一般不能直接转存，必须用户在其域中，但对于白嫖E5等进行互联网分享而言，肯定是不现实的，Onedrive下载单个文件时可以直接下载，对于多个文件或者大文件，则会压缩，并进行多次验证，往往中途会下载失败。至于本身的下载速度慢问题，需要转职魔法师。 解决办法准备 环境：WSL SharePoint Download List Generator：获取文件目录下所有文件直链并导出 Aria2：命令行下载工具，支持续传。 步骤 下载项目中的.txt和.py文件。 安装python依赖包requests：可以使用项目提示命令安装，也可以自行安装（本人pip安装失败）。 获取Real Path：此路径指的不一定是根目录，而是你需要下载的文件目录下的路径，因此需要在Documents后面添加后续路径，否则获取不正确，具体路径可以参考需要下载的当前页面的链接元素。 获取FedAuth cookie：取截止到第一个分号(包括)的所有内容即可。 使用Vscode运行.py文件，按照提示，输入关键信息，即可导出包括所有链接的.txt文本。 复制输出信息里面的aria2c部分，在zsh里面运行即可。 注意事项直接在命令行运行.py文件会报错，因此需要在Vscode中运行。 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#!/usr/bin/env python3 #### Generate Aria2 batch download list for SharePoint Links w/folder structure.# # Author: Henryzhao# Date: 2020/03/14# # How to get the Real Path:# 1. Open the SharePoint link in web browser.# 2. Open DevTools -&gt; Network tab and then reload the page.# 3. Filter out &#x27;RenderListDataAsStream&#x27; XHR request(s).# 4. Copy the Real Path from &#x27;@a1&#x27; or &#x27;@listUrl&#x27; query parameter (without quotes).# (eg. /personal/aaaa_t_cccc_cn/Documents/)# 5. Concat the host and the path. # (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/)# # How to get FedAuth cookie:# 1. Open the SharePoint link in web browser.# 2. Open DevTools -&gt; Network tab and then reload the page.# 3. Locate the very first request after reloading or requests to your SharePoint # domain.# 4. Find either &#x27;Cookie: FedAuth=&#x27; or &#x27;Set-Cookie: FedAuth=&#x27;.# 5. Copy the text after &#x27;Auth=&#x27; till the first semicolon(;).# # Enjoy!# import requestsimport xml.etree.ElementTree as ElementTreefrom urllib.parse import urlparse,quote,unquoteARIA2_INPUT_FILE = &#x27;aria2-links.txt&#x27;DLPATH_PRIFIX = &#x27;Downloads/&#x27;COOKIE_FEDAUTH = NoneSHAREPOINT_ROOT = NoneSESSION = requests.Session()def main(): global COOKIE_FEDAUTH, SHAREPOINT_ROOT, SESSION, DLPATH_PRIFIX SHAREPOINT_ROOT = input(&quot;SharePoint Real Path (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/):\\n&quot;) SHAREPOINT_PATH = urlparse(SHAREPOINT_ROOT).path COOKIE_FEDAUTH = input(&quot;FedAuth cookie (base64 value only):\\n&quot;) cookies=&#123; &#x27;FedAuth&#x27;: COOKIE_FEDAUTH &#125; requests.utils.add_dict_to_cookiejar(SESSION.cookies, cookies) download_dir = input(&quot;Download path (Default: Downloads/): &quot;) if download_dir != &#x27;&#x27;: DLPATH_PRIFIX = download_dir.rstrip(&#x27;/&#x27;) + &#x27;/&#x27; print(&quot;Fetching file list ...&quot;) resp = SESSION.request(&quot;PROPFIND&quot;, SHAREPOINT_ROOT) try: xml_root = ElementTree.fromstring(resp.content.decode(&#x27;utf8&#x27;)) except ElementTree.ParseError: print(f&quot;ERROR! Got Response &lt;&#123;resp.status_code&#125;&gt;: &#123;resp.content.decode(&#x27;utf8&#x27;)&#125;\\nPossible invalid Real Path or FedAuth.&quot;) exit() print(&quot;Generating aria2 file list ...&quot;) fw = open(ARIA2_INPUT_FILE, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) for e in xml_root.findall(&#x27;.//&#123;DAV:&#125;href&#x27;): &#x27;&#x27;&#x27; Input file item: http://server/dir1/dir2/file.iso dir = dir1/dir2 &#x27;&#x27;&#x27; file_url = e.text if file_url.endswith(&#x27;/&#x27;): continue url_info = urlparse(file_url) save_path = DLPATH_PRIFIX + &quot;/&quot;.join(url_info.path.lstrip(SHAREPOINT_PATH).split(&#x27;/&#x27;)[:-1]) save_path = unquote(save_path) encoded_url = url_info.geturl() fw.write(f&#x27;&#123;encoded_url&#125;\\n dir=&#123;save_path&#125;\\n\\n&#x27;) print(f&#x27;\\nSucess!\\nAria2 input file was saved to &#123;ARIA2_INPUT_FILE&#125;. Please run following command to start download:\\n\\naria2c --header=&quot;Cookie:FedAuth=&#123;COOKIE_FEDAUTH&#125;&quot; --input-file=&#123;ARIA2_INPUT_FILE&#125; --max-concurrent-downloads=2 --max-connection-per-server=5 --save-session=session.txt --save-session-interval=30\\n&#x27;)if __name__ == &quot;__main__&quot;: main()","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>因为Onedrive for Business一般是用于商业的，其分享的文件夹一般不能直接转存，必须用户在其域中，但对于白嫖E5等进行互联网分享而言，肯定是不现实的，Onedrive下载单个文件时可以直接下载，对于多个文件或者大文件，则会压缩，并进行多次验证，往往中途会下载失败。至于本身的下载速度慢问题，需要转职魔法师。</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li>环境：WSL</li>\n<li><a href=\"https://github.com/HenryzhaoH/sharepoint-batch-download-listgen\">SharePoint Download  List Generator</a>：获取文件目录下所有文件直链并导出</li>\n<li>Aria2：命令行下载工具，<strong>支持续传</strong>。</li>\n</ol>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>下载<a href=\"https://github.com/HenryzhaoH/sharepoint-batch-download-listgen\">项目</a>中的<code>.txt</code>和<code>.py</code>文件。</li>\n<li>安装python依赖包<code>requests</code>：可以使用项目提示命令安装，也可以自行安装（本人<code>pip</code>安装失败）。</li>\n<li>获取<code>Real Path</code>：此路径指的不一定是根目录，而是你需要下载的文件目录下的路径，因此需要在Documents后面添加后续路径，否则获取不正确，具体路径可以参考需要下载的当前页面的链接元素。</li>\n<li>获取<code>FedAuth cookie</code>：取截止到第一个分号(包括)的所有内容即可。</li>\n<li>使用<strong>Vscode</strong>运行<code>.py</code>文件，按照提示，输入关键信息，即可导出包括所有链接的<code>.txt</code>文本。</li>\n<li>复制输出信息里面的<code>aria2c</code>部分，在<code>zsh</code>里面运行即可。</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>直接在命令行运行<code>.py</code>文件会报错，因此需要在Vscode中运行。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###</span></span><br><span class=\"line\"><span class=\"comment\"># Generate Aria2 batch download list for SharePoint Links w/folder structure.</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Author: Henryzhao</span></span><br><span class=\"line\"><span class=\"comment\"># Date:   2020/03/14</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># How to get the Real Path:</span></span><br><span class=\"line\"><span class=\"comment\"># 1. Open the SharePoint link in web browser.</span></span><br><span class=\"line\"><span class=\"comment\"># 2. Open DevTools -&gt; Network tab and then reload the page.</span></span><br><span class=\"line\"><span class=\"comment\"># 3. Filter out &#x27;RenderListDataAsStream&#x27; XHR request(s).</span></span><br><span class=\"line\"><span class=\"comment\"># 4. Copy the Real Path from &#x27;@a1&#x27; or &#x27;@listUrl&#x27; query parameter (without quotes).</span></span><br><span class=\"line\"><span class=\"comment\">#    (eg. /personal/aaaa_t_cccc_cn/Documents/)</span></span><br><span class=\"line\"><span class=\"comment\"># 5. Concat the host and the path. </span></span><br><span class=\"line\"><span class=\"comment\">#    (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/)</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># How to get FedAuth cookie:</span></span><br><span class=\"line\"><span class=\"comment\"># 1. Open the SharePoint link in web browser.</span></span><br><span class=\"line\"><span class=\"comment\"># 2. Open DevTools -&gt; Network tab and then reload the page.</span></span><br><span class=\"line\"><span class=\"comment\"># 3. Locate the very first request after reloading or requests to your SharePoint </span></span><br><span class=\"line\"><span class=\"comment\">#    domain.</span></span><br><span class=\"line\"><span class=\"comment\"># 4. Find either &#x27;Cookie: FedAuth=&#x27; or &#x27;Set-Cookie: FedAuth=&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\"># 5. Copy the text after &#x27;Auth=&#x27; till the first semicolon(;).</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"comment\"># Enjoy!</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ElementTree</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> urlparse,quote,unquote</span><br><span class=\"line\"></span><br><span class=\"line\">ARIA2_INPUT_FILE = <span class=\"string\">&#x27;aria2-links.txt&#x27;</span></span><br><span class=\"line\">DLPATH_PRIFIX = <span class=\"string\">&#x27;Downloads/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">COOKIE_FEDAUTH = <span class=\"literal\">None</span></span><br><span class=\"line\">SHAREPOINT_ROOT = <span class=\"literal\">None</span></span><br><span class=\"line\">SESSION = requests.Session()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> COOKIE_FEDAUTH, SHAREPOINT_ROOT, SESSION, DLPATH_PRIFIX</span><br><span class=\"line\">    SHAREPOINT_ROOT = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;SharePoint Real Path (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/):\\n&quot;</span>)</span><br><span class=\"line\">    SHAREPOINT_PATH = urlparse(SHAREPOINT_ROOT).path</span><br><span class=\"line\"></span><br><span class=\"line\">    COOKIE_FEDAUTH = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;FedAuth cookie (base64 value only):\\n&quot;</span>)</span><br><span class=\"line\">    cookies=&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;FedAuth&#x27;</span>: COOKIE_FEDAUTH</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    requests.utils.add_dict_to_cookiejar(SESSION.cookies, cookies)</span><br><span class=\"line\"></span><br><span class=\"line\">    download_dir = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;Download path (Default: Downloads/): &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> download_dir != <span class=\"string\">&#x27;&#x27;</span>:</span><br><span class=\"line\">        DLPATH_PRIFIX = download_dir.rstrip(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Fetching file list ...&quot;</span>)</span><br><span class=\"line\">    resp = SESSION.request(<span class=\"string\">&quot;PROPFIND&quot;</span>, SHAREPOINT_ROOT)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        xml_root = ElementTree.fromstring(resp.content.decode(<span class=\"string\">&#x27;utf8&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">except</span> ElementTree.ParseError:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;ERROR! Got Response &lt;<span class=\"subst\">&#123;resp.status_code&#125;</span>&gt;: <span class=\"subst\">&#123;resp.content.decode(<span class=\"string\">&#x27;utf8&#x27;</span>)&#125;</span>\\nPossible invalid Real Path or FedAuth.&quot;</span>)</span><br><span class=\"line\">        exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Generating aria2 file list ...&quot;</span>)</span><br><span class=\"line\">    fw = <span class=\"built_in\">open</span>(ARIA2_INPUT_FILE, <span class=\"string\">&#x27;w&#x27;</span>, encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> xml_root.findall(<span class=\"string\">&#x27;.//&#123;DAV:&#125;href&#x27;</span>):</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27; Input file item:</span></span><br><span class=\"line\"><span class=\"string\">        http://server/dir1/dir2/file.iso</span></span><br><span class=\"line\"><span class=\"string\">          dir = dir1/dir2</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        file_url = e.text</span><br><span class=\"line\">        <span class=\"keyword\">if</span> file_url.endswith(<span class=\"string\">&#x27;/&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        url_info = urlparse(file_url)</span><br><span class=\"line\">        save_path = DLPATH_PRIFIX + <span class=\"string\">&quot;/&quot;</span>.join(url_info.path.lstrip(SHAREPOINT_PATH).split(<span class=\"string\">&#x27;/&#x27;</span>)[:-<span class=\"number\">1</span>])</span><br><span class=\"line\">        save_path = unquote(save_path)</span><br><span class=\"line\">        encoded_url = url_info.geturl()</span><br><span class=\"line\">        fw.write(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;encoded_url&#125;</span>\\n  dir=<span class=\"subst\">&#123;save_path&#125;</span>\\n\\n&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;\\nSucess!\\nAria2 input file was saved to <span class=\"subst\">&#123;ARIA2_INPUT_FILE&#125;</span>. Please run following command to start download:\\n\\naria2c --header=&quot;Cookie:FedAuth=<span class=\"subst\">&#123;COOKIE_FEDAUTH&#125;</span>&quot; --input-file=<span class=\"subst\">&#123;ARIA2_INPUT_FILE&#125;</span> --max-concurrent-downloads=2 --max-connection-per-server=5 --save-session=session.txt --save-session-interval=30\\n&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n"},{"title":"再入江湖","path":"2023/02/14/make a comeback/","text":"缘起之前的blog由于经常在Mac和WIndows以及Ubuntu之间不停切换，总会重新建立新的环境，因此一直都没正式使用，这次blog采用WSL环境搭建，目前满足个人开发需求，且Windows重装后只需要重新关联WSL即可，非常方便，于是将blog重新捡起。 以上，即是再入江湖。 配置 Ubutun(基于WSL环境) Hexo nexmoe主题 Github托管 个人域名实现 具体过程网络上已有详细方案，此处不再赘述，主要关注过程中遇到的问题。 问题及措施Q1. npm不支持nodejs版本R：Ubuntu默认apt的官方源追求稳定，较最新源落后。 A1：更换nodejs更新源。 A2：使用nvm更新nodejs。","content":"<h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>之前的blog由于经常在Mac和WIndows以及Ubuntu之间不停切换，总会重新建立新的环境，因此一直都没正式使用，这次blog采用WSL环境搭建，目前满足个人开发需求，且Windows重装后只需要重新关联WSL即可，非常方便，于是将blog重新捡起。</p>\n<p>以上，即是再入江湖。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>Ubutun(基于WSL环境)</li>\n<li>Hexo</li>\n<li>nexmoe主题</li>\n<li>Github托管</li>\n<li>个人域名实现</li>\n</ul>\n<p>具体过程网络上已有详细方案，此处不再赘述，主要关注过程中遇到的问题。</p>\n<h2 id=\"问题及措施\"><a href=\"#问题及措施\" class=\"headerlink\" title=\"问题及措施\"></a>问题及措施</h2><h3 id=\"Q1-npm不支持nodejs版本\"><a href=\"#Q1-npm不支持nodejs版本\" class=\"headerlink\" title=\"Q1. npm不支持nodejs版本\"></a>Q1. npm不支持nodejs版本</h3><p>R：Ubuntu默认apt的官方源追求稳定，较最新源落后。</p>\n<p>A1：更换nodejs更新源。</p>\n<p>A2：使用nvm更新nodejs。</p>\n"}]