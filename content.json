[{"title":"review-javaee-day04","path":"2023/07/16/review-javaee-day04/","text":"随堂复习Java基础全程学习内容 Java基本语法：Java概述、关键字、标识符、变量、运算符、流程控制（条件判断、选择结构、循环结构）、IDEA、数组。 Java面向对象编程 类和类的内部成员 面向对象的三大特征 其它关键字的使用 Java语言的高级应用 异常处理、多线程、IO流、集合框架、反射、网络编程、新特性、其它常用API。 Java书籍 Java核心技术（辞典作用，随时查阅） Effective Java Java编程思想 软件开发相关内容 计算机的构成：硬件+软件 软件的概念：系统软件+应用软件 人机交互的方式：图形化界面（GUI）、命令行（CLI，了解常用dos命令） 计算机语言的分代：机器语言、汇编语言、高级语言（面向过程、面向对象） Java概述 重要版本：JDK1.0（1996）、JDK5.0、JDK8.0（2014）、JDK17.0 Java之父：詹姆斯·高斯林 Java平台划分：主要应用于JavaEE后台开发、Android客户端开发、大数据开发 Java环境搭建：JDK与JRE与JVM三者关系 HelloWorld注释API文档企业真题1. 一个.java源文件中是否可以包括多个类？有什么限制？是，一个源文件可以声明多个类。但最多只能有一个类用public声明，且要求声明public类的类名与源文件名相同。 2. Java的优势 跨平台性 安全性高 高性能 健壮性 面向对象性 社区繁荣，Java类开源库多。 3. 常用的几个命令行操作都有什么？略 4. Java中是否存在内存溢出、内存泄露？如何解决？存在，后面举例。 5. 如何看待Java是一门半编译半解释的语言？该描述不准确，Java文件编译为字节码后，可以通过解释器进行解释执行，也可以通过JIT编译器进行编译执行。 进度说明尚硅谷Java2023课程第一章结束。 跟着课程写代码的三重方法 跟着教程写，写完后确定执行成功后再盲写。 理清教程代码逻辑，关闭教程，跟着整理好的思路写。 对程序进行注释，然后盲写。、总之，培养自律的习惯，多敲多写，对于复杂的，写tm的十几二十遍，自然而然地提高编程能力。 Java语法1.关键字 被Java语言赋予了特殊含义，用作专门用途的字符串或单词。特点：关键字全是小写字母。注意与字面量区分。 2.标识符 Java中变量、方法、类等要素命令时使用的字符序列凡是可以自己起名的地方都是标识符。比如类名、方法名、变量名、包名、常量名等。 标识符的命名规则 由26个英文字母大小写，0-9，_或$组成。 禁止以数字开头。 不可以使用关键字和保留字，但是可以包含关键字（关键字的大写依然可以使用） Java中严格区分大小写，长度无限制。 标识符不能包含空格。 标识符要注意见明知意,遵守命名规范。对于每一个名称都应该能明确其含义和功能。 标识符的命名规范不遵守规范不影响代码运行，但是会影响代码阅读性，因此一定要严格遵守。 包名：多单词组成时所有字母小写，xxxyyyzzz。 类名、接口名：多单词组成，所有单词首字母大写，XxxYyyZzz。大驼峰 变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写，xxxYyyZzz。小驼峰 常量名：所有字母都大写，多单词时每个单词用下划线连接，XXX_YYY_ZZZ。 1234class IdentifierTest&#123;//类名，大驼峰。 int myAge = 12 ;//变量名，小驼峰。 String myHomeAddress=&quot;广东省&quot;//变量名&#125; 变量 变量是程序中不可缺少的组成单位。最基本的存储单元。变量是内存中的一个存储区域，该区域的数据可以在同一类型的范围内不断变化。 变量构成的三要素：数据类型、变量名、存储的值。 Java中变量声明的格式: 数据类型 变量名&#x3D;变量值 变量包括声明和赋值，可以仅声明，后面再赋值，第一次赋值称为初始化。 12345678910class VriableTest &#123; public static void main(String[] args) &#123; char gender;//声明 gender = &#x27;男&#x27;;//赋值，第一次赋值也称为初始化。 gender = &#x27;女&#x27;;//再赋值 int age = 12;//声明与初始化合并 System.out.println(&quot;性别：&quot;+gender); System.out.println(&quot;年龄：&quot;+age); &#125;&#125;","content":"<h2 id=\"随堂复习\"><a href=\"#随堂复习\" class=\"headerlink\" title=\"随堂复习\"></a>随堂复习</h2><h3 id=\"Java基础全程学习内容\"><a href=\"#Java基础全程学习内容\" class=\"headerlink\" title=\"Java基础全程学习内容\"></a>Java基础全程学习内容</h3><ol>\n<li>Java基本语法：Java概述、关键字、标识符、变量、运算符、流程控制（条件判断、选择结构、循环结构）、IDEA、数组。</li>\n<li>Java面向对象编程</li>\n<li>类和类的内部成员</li>\n<li>面向对象的三大特征</li>\n<li>其它关键字的使用</li>\n<li>Java语言的高级应用</li>\n<li>异常处理、多线程、IO流、集合框架、反射、网络编程、新特性、其它常用API。</li>\n<li>Java书籍</li>\n<li>Java核心技术（辞典作用，随时查阅）</li>\n<li>Effective Java</li>\n<li>Java编程思想</li>\n</ol>\n<h3 id=\"软件开发相关内容\"><a href=\"#软件开发相关内容\" class=\"headerlink\" title=\"软件开发相关内容\"></a>软件开发相关内容</h3><ol>\n<li>计算机的构成：硬件+软件</li>\n<li>软件的概念：系统软件+应用软件</li>\n<li>人机交互的方式：图形化界面（GUI）、命令行（CLI，了解常用dos命令）</li>\n<li>计算机语言的分代：机器语言、汇编语言、高级语言（面向过程、面向对象）</li>\n</ol>\n<h3 id=\"Java概述\"><a href=\"#Java概述\" class=\"headerlink\" title=\"Java概述\"></a>Java概述</h3><ol>\n<li>重要版本：JDK1.0（1996）、JDK5.0、JDK8.0（2014）、JDK17.0</li>\n<li>Java之父：詹姆斯·高斯林</li>\n<li>Java平台划分：主要应用于JavaEE后台开发、Android客户端开发、大数据开发</li>\n<li>Java环境搭建：JDK与JRE与JVM三者关系</li>\n</ol>\n<h3 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h3><h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h3 id=\"API文档\"><a href=\"#API文档\" class=\"headerlink\" title=\"API文档\"></a>API文档</h3><h2 id=\"企业真题\"><a href=\"#企业真题\" class=\"headerlink\" title=\"企业真题\"></a>企业真题</h2><h3 id=\"1-一个-java源文件中是否可以包括多个类？有什么限制？\"><a href=\"#1-一个-java源文件中是否可以包括多个类？有什么限制？\" class=\"headerlink\" title=\"1. 一个.java源文件中是否可以包括多个类？有什么限制？\"></a>1. 一个<code>.java</code>源文件中是否可以包括多个类？有什么限制？</h3><p>是，一个源文件可以声明多个类。但<strong>最多只能有一个类</strong>用<code>public</code>声明，且要求声明<code>public</code>类的类名与源文件名<strong>相同</strong>。</p>\n<h3 id=\"2-Java的优势\"><a href=\"#2-Java的优势\" class=\"headerlink\" title=\"2. Java的优势\"></a>2. Java的优势</h3><ol>\n<li>跨平台性</li>\n<li>安全性高</li>\n<li>高性能</li>\n<li>健壮性</li>\n<li>面向对象性</li>\n<li>社区繁荣，Java类开源库多。</li>\n</ol>\n<h3 id=\"3-常用的几个命令行操作都有什么？\"><a href=\"#3-常用的几个命令行操作都有什么？\" class=\"headerlink\" title=\"3. 常用的几个命令行操作都有什么？\"></a>3. 常用的几个命令行操作都有什么？</h3><p>略</p>\n<h3 id=\"4-Java中是否存在内存溢出、内存泄露？如何解决？\"><a href=\"#4-Java中是否存在内存溢出、内存泄露？如何解决？\" class=\"headerlink\" title=\"4. Java中是否存在内存溢出、内存泄露？如何解决？\"></a>4. Java中是否存在内存溢出、内存泄露？如何解决？</h3><p>存在，后面举例。</p>\n<h3 id=\"5-如何看待Java是一门半编译半解释的语言？\"><a href=\"#5-如何看待Java是一门半编译半解释的语言？\" class=\"headerlink\" title=\"5. 如何看待Java是一门半编译半解释的语言？\"></a>5. 如何看待Java是一门半编译半解释的语言？</h3><p>该描述不准确，Java文件编译为字节码后，可以通过解释器进行解释执行，也可以通过JIT编译器进行编译执行。</p>\n<h2 id=\"进度说明\"><a href=\"#进度说明\" class=\"headerlink\" title=\"进度说明\"></a>进度说明</h2><p>尚硅谷Java2023课程第一章结束。</p>\n<h2 id=\"跟着课程写代码的三重方法\"><a href=\"#跟着课程写代码的三重方法\" class=\"headerlink\" title=\"跟着课程写代码的三重方法\"></a>跟着课程写代码的三重方法</h2><ol>\n<li>跟着教程写，写完后确定执行成功后再盲写。</li>\n<li>理清教程代码逻辑，关闭教程，跟着整理好的思路写。</li>\n<li>对程序进行注释，然后盲写。、<br>总之，培养自律的习惯，多敲多写，对于复杂的，写tm的十几二十遍，自然而然地提高编程能力。</li>\n</ol>\n<h2 id=\"Java语法\"><a href=\"#Java语法\" class=\"headerlink\" title=\"Java语法\"></a>Java语法</h2><h3 id=\"1-关键字\"><a href=\"#1-关键字\" class=\"headerlink\" title=\"1.关键字\"></a>1.关键字</h3><blockquote>\n<p>被Java语言赋予了特殊含义，用作专门用途的字符串或单词。<br>特点：关键字全是<strong>小写字母</strong>。<br>注意与<strong>字面量</strong>区分。</p>\n</blockquote>\n<h3 id=\"2-标识符\"><a href=\"#2-标识符\" class=\"headerlink\" title=\"2.标识符\"></a>2.标识符</h3><blockquote>\n<p>Java中变量、方法、类等要素命令时使用的字符序列<br>凡是可以自己起名的地方都是标识符。比如类名、方法名、变量名、包名、常量名等。</p>\n</blockquote>\n<h4 id=\"标识符的命名规则\"><a href=\"#标识符的命名规则\" class=\"headerlink\" title=\"标识符的命名规则\"></a>标识符的命名规则</h4><blockquote>\n<ol>\n<li>由26个英文字母大小写，0-9，_或$组成。</li>\n<li>禁止以数字开头。</li>\n<li>不可以使用关键字和保留字，但是可以包含关键字（关键字的大写依然可以使用）</li>\n<li>Java中严格区分大小写，长度无限制。</li>\n<li>标识符不能包含空格。</li>\n<li>标识符要注意见明知意,遵守命名规范。对于每一个名称都应该能明确其含义和功能。</li>\n</ol>\n</blockquote>\n<h4 id=\"标识符的命名规范\"><a href=\"#标识符的命名规范\" class=\"headerlink\" title=\"标识符的命名规范\"></a>标识符的命名规范</h4><p>不遵守规范不影响代码运行，但是会影响代码阅读性，因此一定要严格遵守。</p>\n<blockquote>\n<ol>\n<li>包名：多单词组成时所有字母小写，<code>xxxyyyzzz</code>。</li>\n<li>类名、接口名：多单词组成，所有单词首字母大写，<code>XxxYyyZzz</code>。<strong>大驼峰</strong></li>\n<li>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写，<code>xxxYyyZzz</code>。<strong>小驼峰</strong></li>\n<li>常量名：所有字母都大写，多单词时每个单词用下划线连接，<code>XXX_YYY_ZZZ</code>。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">IdentifierTest</span>&#123;<span class=\"hljs-comment\">//类名，大驼峰。</span><br>\t\t<span class=\"hljs-type\">int</span> myAge = <span class=\"hljs-number\">12</span> ;<span class=\"hljs-comment\">//变量名，小驼峰。</span><br>\t\t<span class=\"hljs-type\">String</span> myHomeAddress=<span class=\"hljs-string\">&quot;广东省&quot;</span><span class=\"hljs-comment\">//变量名</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><blockquote>\n<ol>\n<li>变量是程序中不可缺少的组成单位。最基本的存储单元。变量是内存中的一个存储区域，该区域的数据可以在同一类型的范围内不断变化。</li>\n<li>变量构成的三要素：数据类型、变量名、存储的值。</li>\n<li>Java中变量声明的格式: 数据类型 变量名&#x3D;变量值</li>\n<li>变量包括声明和赋值，可以仅声明，后面再赋值，第一次赋值称为初始化。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">VriableTest</span> &#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span>(<span class=\"hljs-params\">String[] args</span>)</span> &#123;<br>        <span class=\"hljs-built_in\">char</span> gender;<span class=\"hljs-comment\">//声明</span><br>        gender = <span class=\"hljs-string\">&#x27;男&#x27;</span>;<span class=\"hljs-comment\">//赋值，第一次赋值也称为初始化。</span><br>        gender = <span class=\"hljs-string\">&#x27;女&#x27;</span>;<span class=\"hljs-comment\">//再赋值</span><br>        <span class=\"hljs-built_in\">int</span> age = <span class=\"hljs-number\">12</span>;<span class=\"hljs-comment\">//声明与初始化合并</span><br>        System.<span class=\"hljs-keyword\">out</span>.println(<span class=\"hljs-string\">&quot;性别：&quot;</span>+gender);<br>        System.<span class=\"hljs-keyword\">out</span>.println(<span class=\"hljs-string\">&quot;年龄：&quot;</span>+age);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n"},{"title":"JavaEE-review day03","path":"2023/07/15/review-javaee-day03/","text":"自省这几天Xbox 星空手柄到了，白天忙着上班培训，晚上沉迷游戏，懈怠了，我有罪。上午团建累死人了，不明白团建意义在哪里。 Java特点优点 跨平台性：核心优势，Java程序都运行在JVM中。因此只需要使用不同系统对应的JDK即可。 面向对象性：支持封装继承多态等，高内聚，低耦合。 健壮性：吸收C&#x2F;C++的优点，但去除了影响健壮性的部分（指针，内存申请和释放等），提供相对安全的内存管理和访问机制。 安全性高：适用于网络&#x2F;分布式环境，提供安全防范机制，可以分配不同的命名空间以防替代本地的同类名、字节码审查等。 简单性：简化了C++语法。 高性能：优化虚拟机，提升运行效率，比如JIT即时编译技术提高运行效率等。 缺点 语法过于复杂，严谨：相较Python等。 使用大型网站开发，架构较重，开发和维护成本较高。 并不适合所有领域。 JVM特点 实现Java程序的跨平台性 自动内存管理（内存分配和回收） 章节案例：个人信息的输出12345678910111213class PersonalInfo&#123; public static void main(String[] args)&#123; System.out.println(&quot;姓名：康师傅&quot;); System.out.println(); System.out.println(&quot;性别：男&quot;); System.out.println(&quot;家庭住址：北京程序员聚集地：回龙观&quot;); &#125;&#125;//output:姓名：康师傅性别：男家庭住址：北京程序员聚集地：回龙观 进度p18结束。明天周末，早点休息，明天继续！！！（进度好慢，都没怎么搞，要自律啊&#x2F;哭）","content":"<h2 id=\"自省\"><a href=\"#自省\" class=\"headerlink\" title=\"自省\"></a>自省</h2><p>这几天Xbox 星空手柄到了，白天忙着上班培训，晚上沉迷游戏，懈怠了，我有罪。上午团建累死人了，不明白团建意义在哪里。</p>\n<h2 id=\"Java特点\"><a href=\"#Java特点\" class=\"headerlink\" title=\"Java特点\"></a>Java特点</h2><h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><ol>\n<li>跨平台性：核心优势，Java程序都运行在JVM中。因此只需要使用不同系统对应的JDK即可。</li>\n<li>面向对象性：支持封装继承多态等，高内聚，低耦合。</li>\n<li>健壮性：吸收C&#x2F;C++的优点，但去除了影响健壮性的部分（指针，内存申请和释放等），提供相对安全的内存管理和访问机制。</li>\n<li>安全性高：适用于网络&#x2F;分布式环境，提供安全防范机制，可以分配不同的命名空间以防替代本地的同类名、字节码审查等。</li>\n<li>简单性：简化了C++语法。</li>\n<li>高性能：优化虚拟机，提升运行效率，比如JIT即时编译技术提高运行效率等。</li>\n</ol>\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><ol>\n<li>语法过于复杂，严谨：相较Python等。</li>\n<li>使用大型网站开发，架构较重，开发和维护成本较高。</li>\n<li>并不适合所有领域。</li>\n</ol>\n<h2 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ol>\n<li>实现Java程序的跨平台性</li>\n<li>自动内存管理（内存分配和回收）</li>\n</ol>\n<h2 id=\"章节案例：个人信息的输出\"><a href=\"#章节案例：个人信息的输出\" class=\"headerlink\" title=\"章节案例：个人信息的输出\"></a>章节案例：个人信息的输出</h2><figure class=\"highlight wren\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs wren\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PersonalInfo</span>&#123;<br>\t<span class=\"hljs-variable\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-variable\">void</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\">String</span>[] <span class=\"hljs-params\">args</span>)&#123;<br>\t <span class=\"hljs-title class_\">System</span>.<span class=\"hljs-property\">out</span>.<span class=\"hljs-property\">println</span>(<span class=\"hljs-string\">&quot;姓名：康师傅&quot;</span>);<br>\t <span class=\"hljs-title class_\">System</span>.<span class=\"hljs-property\">out</span>.<span class=\"hljs-property\">println</span>();<br>\t <span class=\"hljs-title class_\">System</span>.<span class=\"hljs-property\">out</span>.<span class=\"hljs-property\">println</span>(<span class=\"hljs-string\">&quot;性别：男&quot;</span>);<br>\t <span class=\"hljs-title class_\">System</span>.<span class=\"hljs-property\">out</span>.<span class=\"hljs-property\">println</span>(<span class=\"hljs-string\">&quot;家庭住址：北京程序员聚集地：回龙观&quot;</span>);<br>\t&#125;<br>&#125;<br><span class=\"hljs-comment\">//output:</span><br>姓名：康师傅<br><br>性别：男<br>家庭住址：北京程序员聚集地：回龙观<br></code></pre></td></tr></table></figure>\n<h2 id=\"进度\"><a href=\"#进度\" class=\"headerlink\" title=\"进度\"></a>进度</h2><p>p18结束。<br>明天周末，早点休息，明天继续！！！（进度好慢，都没怎么搞，要自律啊&#x2F;哭）</p>\n"},{"title":"JavaEE-review day02","path":"2023/07/12/review-javaee-day02/","text":"一.注释类型 单行注释：// 多行注释：1234/* 第一行第二行*/ 文档注释（Java特有）123/**这是文档注释。*/ 特点 对代码进行解释说明。 使用注释对部分代码进行调试。 注意 单行注释和多行注释不参与编译，生成的字节码文件不包含单行注释内容和多行注释内容。 多行注释不能嵌套使用。 文档注释可以被javadoc解析，生成一套以网页文件形式体现的该程序说明文档。","content":"<h2 id=\"一-注释\"><a href=\"#一-注释\" class=\"headerlink\" title=\"一.注释\"></a>一.注释</h2><h3 id=\"类型\"><a href=\"#类型\" class=\"headerlink\" title=\"类型\"></a>类型</h3><ol>\n<li>单行注释：<code>//</code></li>\n<li>多行注释：<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\"><span class=\"hljs-comment\">/* </span><br><span class=\"hljs-comment\">第一行</span><br><span class=\"hljs-comment\">第二行</span><br><span class=\"hljs-comment\">*/</span><br></code></pre></td></tr></table></figure></li>\n<li>文档注释（Java特有）<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\"><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">这是文档注释。</span><br><span class=\"hljs-comment\">*/</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ol>\n<li>对代码进行解释说明。</li>\n<li>使用注释对部分代码进行调试。</li>\n</ol>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li>单行注释和多行注释不参与编译，生成的字节码文件不包含单行注释内容和多行注释内容。</li>\n<li>多行注释不能嵌套使用。</li>\n<li>文档注释可以被javadoc解析，生成一套以网页文件形式体现的该程序说明文档。</li>\n</ol>\n"},{"title":"JavaEE-review day01","path":"2023/07/11/review-javaee-day01/","text":"前景提要转眼间毕业了，大学期间一直玩，唉，终究是要吃苦头了才能长记性。现在开始重新学习Java，虽然还记得不少，但是再次系统地学习还是非常有必要的。这次学习，变化如下： 不使用Typora快捷编辑，而是使用NotepadPro一个一个敲md笔记。 不使用idea代码补全，采用NotepadPro一个一个敲代码。 严格遵守Java代码规范。 注重数据结构和算法的学习。 抛弃边看边学习的习惯，先看完怎么做，再自己写。总之，此次学习，尽量更少依赖软件本身，而是注重个人能力的提升。 Java基础学习全程脉络 第一阶段：Java基础语法 第二阶段：Java面向对象编程 第三阶段：Java高级应用 Java软件包分类 JDK&#x3D;JRE+开发工具集（包括编译工具），Java程序开发工具包，包含JRE和开发人员使用的工具。 JRE：Java程序运行时环境，包含JVM和运行时所需要的核心类库（JavaSE核心库）。 Java程序开发步骤 编写（*.java） 编译（*.class，文件名是.java文件里面的类名而不是文件名） 运行使用Idea编写程序时会在运行前自动编译。 Hello World!1234567class HelloWorld&#123; public static void main(String[] args)&#123; System.out.println(&quot;Hello World!&quot;); &#125;&#125;//output:Hello World! 代码解释： class：关键字，表示类，后面跟类名。 main()方法：格式固定。表示程序入口。只能将String[] args进行更改，可以为String args[]或者String[] a等。 Java程序严格区分大小写。但是Windows系统不区分大小写。 每一行执行语句必须以;结束。 System.out.println():控制台输出语句，当println为print时，结果不换行。括号内满足数据类型基本运算原则。 一个java文件里面可以有多个类，类名不能重复（包括大小写），但是只能有一个main方法。一个java文件编译后生成一个或多个字节码文件，一个字节码文件对应一个java文件中的类。由于大小写在Windows系统中不区分，大小写不同的同名类生成的字节码文件只能保留最后一个同名文件。 运行时是对字节码文件进行解释运行的。 一个java文件中只能有一个public类 Q：错误Attempting to start build with JDK 17 (WSL Ubuntu), which is not stored in the project&#39;s WSL distribution.A：只需要在Java项目中添加JDK即可（之前居然只在模块中自动添加，项目中没有，因此出现此错误。）","content":"<h2 id=\"前景提要\"><a href=\"#前景提要\" class=\"headerlink\" title=\"前景提要\"></a>前景提要</h2><p>转眼间毕业了，大学期间一直玩，唉，终究是要吃苦头了才能长记性。现在开始重新学习Java，虽然还记得不少，但是再次系统地学习还是非常有必要的。<br>这次学习，变化如下：</p>\n<ol>\n<li>不使用Typora快捷编辑，而是使用NotepadPro一个一个敲md笔记。</li>\n<li>不使用idea代码补全，采用NotepadPro一个一个敲代码。</li>\n<li>严格遵守Java代码规范。</li>\n<li>注重数据结构和算法的学习。</li>\n<li>抛弃边看边学习的习惯，先看完怎么做，再自己写。<br>总之，此次学习，尽量更少依赖软件本身，而是注重个人能力的提升。</li>\n</ol>\n<h2 id=\"Java基础学习全程脉络\"><a href=\"#Java基础学习全程脉络\" class=\"headerlink\" title=\"Java基础学习全程脉络\"></a>Java基础学习全程脉络</h2><ul>\n<li>第一阶段：Java基础语法</li>\n<li>第二阶段：<strong>Java面向对象编程</strong></li>\n<li>第三阶段：Java高级应用</li>\n</ul>\n<h2 id=\"Java软件包分类\"><a href=\"#Java软件包分类\" class=\"headerlink\" title=\"Java软件包分类\"></a>Java软件包分类</h2><ul>\n<li>JDK&#x3D;JRE+开发工具集（包括编译工具），Java程序开发工具包，包含JRE和开发人员使用的工具。</li>\n<li>JRE：Java程序运行时环境，包含JVM和运行时所需要的核心类库（JavaSE核心库）。</li>\n</ul>\n<h2 id=\"Java程序开发步骤\"><a href=\"#Java程序开发步骤\" class=\"headerlink\" title=\"Java程序开发步骤\"></a>Java程序开发步骤</h2><ol>\n<li>编写（*.java）</li>\n<li>编译（*.class，文件名是.java文件里面的类名而不是文件名）</li>\n<li>运行<br>使用Idea编写程序时会在运行前自动编译。</li>\n</ol>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World!\"></a>Hello World!</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HelloWorld</span>&#123;<br>\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span>&#123;<br>\tSystem.out.println(<span class=\"hljs-string\">&quot;Hello World!&quot;</span>);<br>\t&#125;<br>&#125;<br><span class=\"hljs-comment\">//output:</span><br>Hello World!<br></code></pre></td></tr></table></figure>\n<p>代码解释：</p>\n<ol>\n<li>class：关键字，表示类，后面跟类名。</li>\n<li>main()方法：格式固定。表示程序入口。只能将<code>String[] args</code>进行更改，可以为<code>String args[]</code>或者<code>String[] a</code>等。</li>\n<li>Java程序严格区分大小写。但是Windows系统不区分大小写。</li>\n<li>每一行执行语句必须以<code>;</code>结束。</li>\n<li><code>System.out.println()</code>:控制台输出语句，当<code>println</code>为<code>print</code>时，结果不换行。括号内满足数据类型基本运算原则。</li>\n<li>一个java文件里面可以有多个类，类名不能重复（包括大小写），但是只能有一个main方法。一个java文件编译后生成一个或多个字节码文件，一个字节码文件对应一个java文件中的类。由于大小写在Windows系统中不区分，大小写不同的同名类生成的字节码文件只能保留最后一个同名文件。</li>\n<li>运行时是对字节码文件进行解释运行的。</li>\n<li>一个java文件中只能有一个<code>public</code>类<blockquote>\n<p>Q：错误<code>Attempting to start build with JDK 17 (WSL Ubuntu), which is not stored in the project&#39;s WSL distribution.</code><br>A：只需要在Java项目中添加JDK即可（之前居然只在模块中自动添加，项目中没有，因此出现此错误。）</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"再入江湖","path":"2023/06/08/make a comeback/","text":"缘起之前的blog由于经常在Mac和WIndows以及Ubuntu之间不停切换，总会重新建立新的环境，因此一直都没正式使用，这次blog采用WSL环境搭建，目前满足个人开发需求，且Windows重装后只需要重新关联WSL即可，非常方便，于是将blog重新捡起。 以上，即是再入江湖。 配置 Ubutun(基于WSL环境) Hexo nexmoe主题 Github托管 个人域名实现 具体过程网络上已有详细方案，此处不再赘述，主要关注过程中遇到的问题。 问题及措施Q1. npm不支持nodejs版本R：Ubuntu默认apt的官方源追求稳定，较最新源落后。 A1：更换nodejs更新源。 A2：使用nvm更新nodejs。","content":"<h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h2><p>之前的blog由于经常在Mac和WIndows以及Ubuntu之间不停切换，总会重新建立新的环境，因此一直都没正式使用，这次blog采用WSL环境搭建，目前满足个人开发需求，且Windows重装后只需要重新关联WSL即可，非常方便，于是将blog重新捡起。</p>\n<p>以上，即是再入江湖。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>Ubutun(基于WSL环境)</li>\n<li>Hexo</li>\n<li>nexmoe主题</li>\n<li>Github托管</li>\n<li>个人域名实现</li>\n</ul>\n<p>具体过程网络上已有详细方案，此处不再赘述，主要关注过程中遇到的问题。</p>\n<h2 id=\"问题及措施\"><a href=\"#问题及措施\" class=\"headerlink\" title=\"问题及措施\"></a>问题及措施</h2><h3 id=\"Q1-npm不支持nodejs版本\"><a href=\"#Q1-npm不支持nodejs版本\" class=\"headerlink\" title=\"Q1. npm不支持nodejs版本\"></a>Q1. npm不支持nodejs版本</h3><p>R：Ubuntu默认apt的官方源追求稳定，较最新源落后。</p>\n<p>A1：更换nodejs更新源。</p>\n<p>A2：使用nvm更新nodejs。</p>\n"},{"title":"WSL自动签到","path":"2023/06/07/WSL自动签到/","text":"","content":""},{"title":"释放WSL额外占用","path":"2023/03/09/release-wsl-storage/","text":"问题描述在WSL中删除文件后，WSL并不会自行释放资源，导致虚拟磁盘占用越来越大，因此需要定期释放资源。 方法及步骤 找到映像ext4.vhdx位置。 关闭wsl：wsl --shutdown，请注意一定要先关闭wsl，否则容易损坏虚拟映像。 open windows dispart：diskpart 选择目标映像（路径以实际为准）：select vdisk file=&quot;D:\\\\wsl\\ext4,vhdx&quot; 更改读取方式：attach vdisk readonly 压缩空间：compact vdisk 断开连接：detach vdisk 退出：exit","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在WSL中删除文件后，WSL并不会自行释放资源，导致虚拟磁盘占用越来越大，因此需要定期释放资源。</p>\n<h2 id=\"方法及步骤\"><a href=\"#方法及步骤\" class=\"headerlink\" title=\"方法及步骤\"></a>方法及步骤</h2><ol>\n<li>找到映像<strong>ext4.vhdx</strong>位置。</li>\n<li>关闭wsl：<code>wsl --shutdown</code>，请注意一定要先关闭wsl，否则容易损坏虚拟映像。</li>\n<li>open windows dispart：<code>diskpart</code></li>\n<li>选择目标映像（路径以实际为准）：<code>select vdisk file=&quot;D:\\\\wsl\\ext4,vhdx&quot;</code></li>\n<li>更改读取方式：<code>attach vdisk readonly</code></li>\n<li>压缩空间：<code>compact vdisk</code></li>\n<li>断开连接：<code>detach vdisk</code></li>\n<li>退出：<code>exit</code></li>\n</ol>\n"},{"title":"下载Onedrive或Sharepoint分享的文件夹","path":"2023/03/06/downloadfromondrive/","text":"背景因为Onedrive for Business一般是用于商业的，其分享的文件夹一般不能直接转存，必须用户在其域中，但对于白嫖E5等进行互联网分享而言，肯定是不现实的，Onedrive下载单个文件时可以直接下载，对于多个文件或者大文件，则会压缩，并进行多次验证，往往中途会下载失败。至于本身的下载速度慢问题，需要转职魔法师。 解决办法准备 环境：WSL SharePoint Download List Generator：获取文件目录下所有文件直链并导出 Aria2：命令行下载工具，支持续传。 步骤 下载项目中的.txt和.py文件。 安装python依赖包requests：可以使用项目提示命令安装，也可以自行安装（本人pip安装失败）。 获取Real Path：此路径指的不一定是根目录，而是你需要下载的文件目录下的路径，因此需要在Documents后面添加后续路径，否则获取不正确，具体路径可以参考需要下载的当前页面的链接元素。 获取FedAuth cookie：取截止到第一个分号(包括)的所有内容即可。 使用Vscode运行.py文件，按照提示，输入关键信息，即可导出包括所有链接的.txt文本。 复制输出信息里面的aria2c部分，在zsh里面运行即可。 注意事项直接在命令行运行.py文件会报错，因此需要在Vscode中运行。 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#!/usr/bin/env python3 #### Generate Aria2 batch download list for SharePoint Links w/folder structure.# # Author: Henryzhao# Date: 2020/03/14# # How to get the Real Path:# 1. Open the SharePoint link in web browser.# 2. Open DevTools -&gt; Network tab and then reload the page.# 3. Filter out &#x27;RenderListDataAsStream&#x27; XHR request(s).# 4. Copy the Real Path from &#x27;@a1&#x27; or &#x27;@listUrl&#x27; query parameter (without quotes).# (eg. /personal/aaaa_t_cccc_cn/Documents/)# 5. Concat the host and the path. # (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/)# # How to get FedAuth cookie:# 1. Open the SharePoint link in web browser.# 2. Open DevTools -&gt; Network tab and then reload the page.# 3. Locate the very first request after reloading or requests to your SharePoint # domain.# 4. Find either &#x27;Cookie: FedAuth=&#x27; or &#x27;Set-Cookie: FedAuth=&#x27;.# 5. Copy the text after &#x27;Auth=&#x27; till the first semicolon(;).# # Enjoy!# import requestsimport xml.etree.ElementTree as ElementTreefrom urllib.parse import urlparse,quote,unquoteARIA2_INPUT_FILE = &#x27;aria2-links.txt&#x27;DLPATH_PRIFIX = &#x27;Downloads/&#x27;COOKIE_FEDAUTH = NoneSHAREPOINT_ROOT = NoneSESSION = requests.Session()def main(): global COOKIE_FEDAUTH, SHAREPOINT_ROOT, SESSION, DLPATH_PRIFIX SHAREPOINT_ROOT = input(&quot;SharePoint Real Path (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/):\\n&quot;) SHAREPOINT_PATH = urlparse(SHAREPOINT_ROOT).path COOKIE_FEDAUTH = input(&quot;FedAuth cookie (base64 value only):\\n&quot;) cookies=&#123; &#x27;FedAuth&#x27;: COOKIE_FEDAUTH &#125; requests.utils.add_dict_to_cookiejar(SESSION.cookies, cookies) download_dir = input(&quot;Download path (Default: Downloads/): &quot;) if download_dir != &#x27;&#x27;: DLPATH_PRIFIX = download_dir.rstrip(&#x27;/&#x27;) + &#x27;/&#x27; print(&quot;Fetching file list ...&quot;) resp = SESSION.request(&quot;PROPFIND&quot;, SHAREPOINT_ROOT) try: xml_root = ElementTree.fromstring(resp.content.decode(&#x27;utf8&#x27;)) except ElementTree.ParseError: print(f&quot;ERROR! Got Response &lt;&#123;resp.status_code&#125;&gt;: &#123;resp.content.decode(&#x27;utf8&#x27;)&#125;\\nPossible invalid Real Path or FedAuth.&quot;) exit() print(&quot;Generating aria2 file list ...&quot;) fw = open(ARIA2_INPUT_FILE, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) for e in xml_root.findall(&#x27;.//&#123;DAV:&#125;href&#x27;): &#x27;&#x27;&#x27; Input file item: http://server/dir1/dir2/file.iso dir = dir1/dir2 &#x27;&#x27;&#x27; file_url = e.text if file_url.endswith(&#x27;/&#x27;): continue url_info = urlparse(file_url) save_path = DLPATH_PRIFIX + &quot;/&quot;.join(url_info.path.lstrip(SHAREPOINT_PATH).split(&#x27;/&#x27;)[:-1]) save_path = unquote(save_path) encoded_url = url_info.geturl() fw.write(f&#x27;&#123;encoded_url&#125;\\n dir=&#123;save_path&#125;\\n\\n&#x27;) print(f&#x27;\\nSucess!\\nAria2 input file was saved to &#123;ARIA2_INPUT_FILE&#125;. Please run following command to start download:\\n\\naria2c --header=&quot;Cookie:FedAuth=&#123;COOKIE_FEDAUTH&#125;&quot; --input-file=&#123;ARIA2_INPUT_FILE&#125; --max-concurrent-downloads=2 --max-connection-per-server=5 --save-session=session.txt --save-session-interval=30\\n&#x27;)if __name__ == &quot;__main__&quot;: main()","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>因为Onedrive for Business一般是用于商业的，其分享的文件夹一般不能直接转存，必须用户在其域中，但对于白嫖E5等进行互联网分享而言，肯定是不现实的，Onedrive下载单个文件时可以直接下载，对于多个文件或者大文件，则会压缩，并进行多次验证，往往中途会下载失败。至于本身的下载速度慢问题，需要转职魔法师。</p>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li>环境：WSL</li>\n<li><a href=\"https://github.com/HenryzhaoH/sharepoint-batch-download-listgen\">SharePoint Download  List Generator</a>：获取文件目录下所有文件直链并导出</li>\n<li>Aria2：命令行下载工具，<strong>支持续传</strong>。</li>\n</ol>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>下载<a href=\"https://github.com/HenryzhaoH/sharepoint-batch-download-listgen\">项目</a>中的<code>.txt</code>和<code>.py</code>文件。</li>\n<li>安装python依赖包<code>requests</code>：可以使用项目提示命令安装，也可以自行安装（本人<code>pip</code>安装失败）。</li>\n<li>获取<code>Real Path</code>：此路径指的不一定是根目录，而是你需要下载的文件目录下的路径，因此需要在Documents后面添加后续路径，否则获取不正确，具体路径可以参考需要下载的当前页面的链接元素。</li>\n<li>获取<code>FedAuth cookie</code>：取截止到第一个分号(包括)的所有内容即可。</li>\n<li>使用<strong>Vscode</strong>运行<code>.py</code>文件，按照提示，输入关键信息，即可导出包括所有链接的<code>.txt</code>文本。</li>\n<li>复制输出信息里面的<code>aria2c</code>部分，在<code>zsh</code>里面运行即可。</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>直接在命令行运行<code>.py</code>文件会报错，因此需要在Vscode中运行。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#!/usr/bin/env python3 </span><br><br><span class=\"hljs-comment\">###</span><br><span class=\"hljs-comment\"># Generate Aria2 batch download list for SharePoint Links w/folder structure.</span><br><span class=\"hljs-comment\"># </span><br><span class=\"hljs-comment\"># Author: Henryzhao</span><br><span class=\"hljs-comment\"># Date:   2020/03/14</span><br><span class=\"hljs-comment\"># </span><br><span class=\"hljs-comment\"># How to get the Real Path:</span><br><span class=\"hljs-comment\"># 1. Open the SharePoint link in web browser.</span><br><span class=\"hljs-comment\"># 2. Open DevTools -&gt; Network tab and then reload the page.</span><br><span class=\"hljs-comment\"># 3. Filter out &#x27;RenderListDataAsStream&#x27; XHR request(s).</span><br><span class=\"hljs-comment\"># 4. Copy the Real Path from &#x27;@a1&#x27; or &#x27;@listUrl&#x27; query parameter (without quotes).</span><br><span class=\"hljs-comment\">#    (eg. /personal/aaaa_t_cccc_cn/Documents/)</span><br><span class=\"hljs-comment\"># 5. Concat the host and the path. </span><br><span class=\"hljs-comment\">#    (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/)</span><br><span class=\"hljs-comment\"># </span><br><span class=\"hljs-comment\"># How to get FedAuth cookie:</span><br><span class=\"hljs-comment\"># 1. Open the SharePoint link in web browser.</span><br><span class=\"hljs-comment\"># 2. Open DevTools -&gt; Network tab and then reload the page.</span><br><span class=\"hljs-comment\"># 3. Locate the very first request after reloading or requests to your SharePoint </span><br><span class=\"hljs-comment\">#    domain.</span><br><span class=\"hljs-comment\"># 4. Find either &#x27;Cookie: FedAuth=&#x27; or &#x27;Set-Cookie: FedAuth=&#x27;.</span><br><span class=\"hljs-comment\"># 5. Copy the text after &#x27;Auth=&#x27; till the first semicolon(;).</span><br><span class=\"hljs-comment\"># </span><br><span class=\"hljs-comment\"># Enjoy!</span><br><span class=\"hljs-comment\"># </span><br><br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> xml.etree.ElementTree <span class=\"hljs-keyword\">as</span> ElementTree<br><span class=\"hljs-keyword\">from</span> urllib.parse <span class=\"hljs-keyword\">import</span> urlparse,quote,unquote<br><br>ARIA2_INPUT_FILE = <span class=\"hljs-string\">&#x27;aria2-links.txt&#x27;</span><br>DLPATH_PRIFIX = <span class=\"hljs-string\">&#x27;Downloads/&#x27;</span><br><br>COOKIE_FEDAUTH = <span class=\"hljs-literal\">None</span><br>SHAREPOINT_ROOT = <span class=\"hljs-literal\">None</span><br>SESSION = requests.Session()<br><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():<br>    <span class=\"hljs-keyword\">global</span> COOKIE_FEDAUTH, SHAREPOINT_ROOT, SESSION, DLPATH_PRIFIX<br>    SHAREPOINT_ROOT = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;SharePoint Real Path (eg. https://xxxx-my.sharepoint.com/personal/aaaa_t_cccc_cn/Documents/):\\n&quot;</span>)<br>    SHAREPOINT_PATH = urlparse(SHAREPOINT_ROOT).path<br><br>    COOKIE_FEDAUTH = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;FedAuth cookie (base64 value only):\\n&quot;</span>)<br>    cookies=&#123;<br>        <span class=\"hljs-string\">&#x27;FedAuth&#x27;</span>: COOKIE_FEDAUTH<br>    &#125;<br>    requests.utils.add_dict_to_cookiejar(SESSION.cookies, cookies)<br><br>    download_dir = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Download path (Default: Downloads/): &quot;</span>)<br>    <span class=\"hljs-keyword\">if</span> download_dir != <span class=\"hljs-string\">&#x27;&#x27;</span>:<br>        DLPATH_PRIFIX = download_dir.rstrip(<span class=\"hljs-string\">&#x27;/&#x27;</span>) + <span class=\"hljs-string\">&#x27;/&#x27;</span><br><br>    <br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Fetching file list ...&quot;</span>)<br>    resp = SESSION.request(<span class=\"hljs-string\">&quot;PROPFIND&quot;</span>, SHAREPOINT_ROOT)<br>    <span class=\"hljs-keyword\">try</span>:<br>        xml_root = ElementTree.fromstring(resp.content.decode(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>))<br>    <span class=\"hljs-keyword\">except</span> ElementTree.ParseError:<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;ERROR! Got Response &lt;<span class=\"hljs-subst\">&#123;resp.status_code&#125;</span>&gt;: <span class=\"hljs-subst\">&#123;resp.content.decode(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>)&#125;</span>\\nPossible invalid Real Path or FedAuth.&quot;</span>)<br>        exit()<br><br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Generating aria2 file list ...&quot;</span>)<br>    fw = <span class=\"hljs-built_in\">open</span>(ARIA2_INPUT_FILE, <span class=\"hljs-string\">&#x27;w&#x27;</span>, encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>)<br>    <span class=\"hljs-keyword\">for</span> e <span class=\"hljs-keyword\">in</span> xml_root.findall(<span class=\"hljs-string\">&#x27;.//&#123;DAV:&#125;href&#x27;</span>):<br>        <span class=\"hljs-string\">&#x27;&#x27;&#x27; Input file item:</span><br><span class=\"hljs-string\">        http://server/dir1/dir2/file.iso</span><br><span class=\"hljs-string\">          dir = dir1/dir2</span><br><span class=\"hljs-string\">        &#x27;&#x27;&#x27;</span><br>        file_url = e.text<br>        <span class=\"hljs-keyword\">if</span> file_url.endswith(<span class=\"hljs-string\">&#x27;/&#x27;</span>):<br>            <span class=\"hljs-keyword\">continue</span><br>        url_info = urlparse(file_url)<br>        save_path = DLPATH_PRIFIX + <span class=\"hljs-string\">&quot;/&quot;</span>.join(url_info.path.lstrip(SHAREPOINT_PATH).split(<span class=\"hljs-string\">&#x27;/&#x27;</span>)[:-<span class=\"hljs-number\">1</span>])<br>        save_path = unquote(save_path)<br>        encoded_url = url_info.geturl()<br>        fw.write(<span class=\"hljs-string\">f&#x27;<span class=\"hljs-subst\">&#123;encoded_url&#125;</span>\\n  dir=<span class=\"hljs-subst\">&#123;save_path&#125;</span>\\n\\n&#x27;</span>)<br>    <br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&#x27;\\nSucess!\\nAria2 input file was saved to <span class=\"hljs-subst\">&#123;ARIA2_INPUT_FILE&#125;</span>. Please run following command to start download:\\n\\naria2c --header=&quot;Cookie:FedAuth=<span class=\"hljs-subst\">&#123;COOKIE_FEDAUTH&#125;</span>&quot; --input-file=<span class=\"hljs-subst\">&#123;ARIA2_INPUT_FILE&#125;</span> --max-concurrent-downloads=2 --max-connection-per-server=5 --save-session=session.txt --save-session-interval=30\\n&#x27;</span>)<br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure>\n\n"}]